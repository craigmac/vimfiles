{
   // Place your devx workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
   // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
   // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
   // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
   // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
   // Placeholders with the same ids are connected.
   // Example:
   // "Print to console": {
   // 	"scope": "javascript,typescript",
   // 	"prefix": "log",
   // 	"body": [
   // 		"console.log('$1');",
   // 		"$2"
   // 	],
   // 	"description": "Log output to console"
   // }

   // Our snippets are prefixed with "wm-" so that when you can type "wm-" autocomplete, if enabled, will show them all.
   "Alert box Danger": {
      "scope": "markdown",
      "prefix": "wm-dang",
      "body": [
         "{% alert_box danger %}",
         "$1",
         "{% endalert_box %}",
         "$0",
      ],
      "description": "Jekyll alert box - Danger type."
   },
   "Alert box Important": {
      "scope": "markdown",
      "prefix": "wm-imp",
      "body": [
         "{% alert_box important %}",
         "$1",
         "{% endalert_box %}",
         "$0",
      ],
      "description": "Jekyll alert box - Important type."
   },
   "Alert box Warning": {
      "scope": "markdown",
      "prefix": "wm-warn",
      "body": [
         "{% alert_box warning %}",
         "$1",
         "{% endalert_box %}",
         "$0",
      ],
      "description": "Jekyll alert box - Warning type."
   },
   "Alert box Tip": {
      "scope": "markdown",
      "prefix": "wm-tip",
      "body": [
         "{% alert_box tip %}",
         "$1",
         "{% endalert_box %}",
         "$0",
      ],
      "description": "Jekyll alert box - Tip type."
   },
   "Alert box Note": {
      "scope": "markdown",
      "prefix": "wm-note",
      "body": [
         "{% alert_box note %}",
         "$1",
         "{% endalert_box %}",
         "$0",
      ],
      "description": "Jekyll alert box - Note type."
   },
   "Jekyll Image": {
      "scope": "markdown",
      "prefix": "wm-img",
      "body": [
         "![${1:Descriptive alt text}]({{ site.baseurl }}{{ page.images_folder }}/${2:filename.ext})$0"
      ],
      "description": "Insert image with alternate text."
   },
   "Jekyll Figure": {
      "scope": "markdown",
      "prefix": "wm-fig",
      "body": [
         "{% include figure src=\"${1:name.jpg}\" alt=\"${2:text to describe image}\" width=\"${3:100}\" align=\"${4:left}\" class=\"${5:img-fluid}\" caption=\"${6:text to display below the image}\" %} $0"
      ],
      "description": "Like an image but greater control."
   },
   "Jekyll Snippet Include": {
      "scope": "markdown",
      "prefix": "wm-snip",
      "body": [
         "{% include {{ page.version }}/snippets/${1:filename-extension-required.md} %} $0"
      ],
      "description": "Insert a snippet file."
   },
   "Jekyll Page Version": {
      "scope": "markdown",
      "prefix": "wm-pv",
      "body": [
         "{{ page.version }}$0"
      ],
      "description": "Insert appropriate doc version value based on page."
   },
   "Jekyll New Markdown Page": {
      "scope": "markdown",
      "prefix": "wm-new",
      "body": [
         "---",
         "title: \"${1:Set up macOS for C++ App Development}\"",
         "excerpt: \"${2:Get started with installing Engine on macOS platform.\"}",
         "category: ${3:cpp | rn | designer (choose just 1)}",
         "sub_category: ${4:guides}",
         "tags: ${5:CPP RN Designer (choose up to 3, but at least 1)}",
         "---",
         "",
         "$0"
      ],
      "description": "Use for new Markdown page YAML frontmatter setup."
   },
   "Jekyll Relative Link": {
      "scope": "markdown",
      "prefix": "wm-rel",
      "body": [
         "[${1:Text displayed for link}](../${2:page name without extension}/) $0"
      ],
      "description": "Insert a link relative to current page."
   },
   "Jekyll Link": {
      "scope": "markdown",
      "prefix": "wm-ln",
      "body": [
         "[${1:link display text}](/{{ page.version }}/${2:path-to-file-without-extension}/) $0"
      ],
      "description": "Link incorporating correct version according to current page version."
   },
   "Jekyll External Link": {
      "scope": "markdown",
      "prefix": "wm-exln",
      "body": [
         "[${1:link display text}](${2:http://someplace.com}) $0"
      ],
      "description": "Link to external site. External links in tables require further trickery, check docs."
   },
   "Jekyll Codeblock with Raw": {
      "scope": "markdown",
      "prefix": "wm-code",
      "body": [
         "{% raw %}",
         "",
         "```${1:jsx|shell|cpp|make mostly}",
         "${2:code here}",
         "```",
         "",
         "{% endraw %}",
         "",
         "$0"
      ],
      "description": "Code block wrapped with raw Liquid tag to ensure that text inside a code block isn't interpreted as Liquid syntax."
   }
}

